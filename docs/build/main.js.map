{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/github/github.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 2","var map = {\n\t\"../pages/home/home.module\": [\n\t\t295,\n\t\t1\n\t],\n\t\"../pages/profile/profile.module\": [\n\t\t296,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 152;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 152\n// module chunks = 2","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/retry';\nimport 'rxjs/add/operator/timeout';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n/*\n  Generated class for the GithubProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GithubProvider {\n\n    constructor(public http: HttpClient) {\n        console.log('Hello GithubProvider Provider');\n    }\n\n    search(term: string) {\n\n        let url: string = 'https://api.github.com/search/users?q=' + term;\n\n        return this.http.get(url, { observe: 'response', responseType: 'json' })\n            .timeout(10000)\n            .retry(3)\n            .map((res: any) => {\n                let data = res.body;\n                if(data.items && Array.isArray(data.items)){\n                    return data;\n                }else{\n                    return { total_count: 0, items: [] };\n                }\n            })\n            .catch((error: any) => Observable.throw(error || 'Server error'));\n    }\n\n    getUrl(resource: string) {\n        let url: string = resource;\n        return this.http.get(url, { observe: 'response', responseType: 'json' })\n            .timeout(10000)\n            .retry(3)\n            .map((res: any) => {\n                let data = res.body;\n                if(data){\n                    return data;\n                }else{\n                    return { };\n                }\n            })\n            .catch((error: any) => Observable.throw(error || 'Server error'));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/github/github.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { GithubProvider } from '../providers/github/github';\n\n@NgModule({\n    declarations: [\n        MyApp\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        IonicStorageModule.forRoot({\n            driverOrder: ['indexeddb', 'sqlite', 'websql', 'localstorage']\n        }),\n        IonicModule.forRoot(MyApp)\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp\n    ],\n    providers: [\n        StatusBar,\n        SplashScreen,\n        { provide: ErrorHandler, useClass: IonicErrorHandler },\n        GithubProvider\n    ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = 'HomePage';\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}